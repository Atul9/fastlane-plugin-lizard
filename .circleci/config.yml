# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: bundle check || bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "Gemfile" }}

      # run no lizard tests
      - run:
          name: run no lizard tests
          command: bundle exec rspec --tag type:no_lizard

      # Install Lizard
      - run:
          name: run tests
          command: apt-get -y update && apt-get -y upgrade && apt-get install -y python3-pip && pip3 install lizard --upgrade

      # run lizard tests
      - run:
          name: run lizard tests
          command: bundle exec rspec --tag type:lizard

      # collect reports
      - store_test_results:
          path: ~/repo/test-results
      - store_artifacts:
          path: ~/repo/test-results
          destination: test-results

  deploy:
    docker:
       - image: mosesliao/ruby-lizard:latest

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Bundle
          command: bundle install

      - run:
          name: Install Rake
          command: rake install

      - run:
          name: Release to RubyGems
          command: rake circleci_release

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
